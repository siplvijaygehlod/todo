{"ast":null,"code":"import _classCallCheck from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/etc/opt/todolist/src/components/CreateList.js\";\nimport React from \"react\";\nimport { addList } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nvar CreateList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateList, _React$Component);\n\n  function CreateList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      term: \"\",\n      inputHolder: \"Add To-do Data\"\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        term: event.target.value\n      });\n    };\n\n    _this.onSearchSubmit = function (event) {\n      event.preventDefault(); //send this value to reducer using action creator\n\n      if (_this.state.term !== \"\") {\n        _this.props.addList(_this.state.term);\n\n        _this.setState({\n          term: \"\"\n        });\n      } else {\n        alert(\"enter To Do item\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateList, [{\n    key: \"listForm\",\n    value: function listForm() {\n      return React.createElement(\"div\", {\n        className: \" search-bar ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSearchSubmit,\n        className: \"ui form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Add To Do Item\"), React.createElement(\"input\", {\n        id: \"textData\",\n        type: \"text\",\n        value: this.state.term,\n        placeholder: this.state.inputHolder,\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ui relaxed divided list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.listForm());\n    }\n  }]);\n\n  return CreateList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //console.log(state)\n  return {\n    mydata: state.mydata\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addList: addList\n})(CreateList);","map":{"version":3,"sources":["/etc/opt/todolist/src/components/CreateList.js"],"names":["React","addList","connect","CreateList","state","term","inputHolder","onInputChange","event","setState","target","value","onSearchSubmit","preventDefault","props","alert","listForm","Component","mapStateToProps","mydata"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,WAAW,EAAE;AAAzB,K;;UACRC,a,GAAgB,UAAAC,KAAK,EAAI;AACvB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AACD,K;;UAEDC,c,GAAiB,UAAAJ,KAAK,EAAI;AACxBA,MAAAA,KAAK,CAACK,cAAN,GADwB,CAGxB;;AACA,UAAI,MAAKT,KAAL,CAAWC,IAAX,KAAoB,EAAxB,EAA4B;AAC1B,cAAKS,KAAL,CAAWb,OAAX,CAAmB,MAAKG,KAAL,CAAWC,IAA9B;;AACA,cAAKI,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAHD,MAGO;AACLU,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF,K;;;;;;;+BAEU;AACT,aACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKH,cAArB;AAAqC,QAAA,SAAS,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,IAHpB;AAIE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAJ1B;AAKE,QAAA,QAAQ,EAAE,KAAKC,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CADF;AAgBD;;;6BACQ;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKS,QAAL,EAA1C,CAAP;AACD;;;;EAtCsBhB,KAAK,CAACiB,S;;AAyC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAd,KAAK,EAAI;AAC/B;AACA,SAAO;AACLe,IAAAA,MAAM,EAAEf,KAAK,CAACe;AADT,GAAP;AAGD,CALD;;AAOA,eAAejB,OAAO,CACpBgB,eADoB,EAEpB;AAAEjB,EAAAA,OAAO,EAAPA;AAAF,CAFoB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { addList } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nclass CreateList extends React.Component {\n  state = { term: \"\", inputHolder: \"Add To-do Data\" };\n  onInputChange = event => {\n    this.setState({ term: event.target.value });\n  };\ncons\n  onSearchSubmit = event => {\n    event.preventDefault();\n\n    //send this value to reducer using action creator\n    if (this.state.term !== \"\") {\n      this.props.addList(this.state.term);\n      this.setState({ term: \"\" });\n    } else {\n      alert(\"enter To Do item\");\n    }\n  };\n\n  listForm() {\n    return (\n      <div className=\" search-bar ui segment\">\n        <form onSubmit={this.onSearchSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Add To Do Item</label>\n            <input \n              id=\"textData\"\n              type=\"text\"\n              value={this.state.term}\n              placeholder={this.state.inputHolder}\n              onChange={this.onInputChange}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n  render() {\n    return <div className=\"ui relaxed divided list\">{this.listForm()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  //console.log(state)\n  return {\n    mydata: state.mydata\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { addList }\n)(CreateList);\n"]},"metadata":{},"sourceType":"module"}