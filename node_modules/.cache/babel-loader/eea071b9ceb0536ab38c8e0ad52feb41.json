{"ast":null,"code":"import _classCallCheck from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/etc/opt/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/etc/opt/todolist/src/components/CreateList.js\";\nimport React from \"react\";\nimport { addList, editList } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nvar CreateList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateList, _React$Component);\n\n  function CreateList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      term: \"\",\n      inputHolder: \"Add To-do Data\",\n      updateHolder: \"Update To-do Data\"\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        term: event.target.value\n      });\n    };\n\n    _this.onSearchSubmit = function (event) {\n      event.preventDefault();\n      /* send this value to reducer using action creator */\n\n      if (_this.state.term !== \"\") {\n        _this.props.addList(_this.state.term);\n\n        _this.setState({\n          term: \"\"\n        });\n      } else {\n        alert(\"enter To Do item\");\n      }\n    };\n\n    _this.onUpdateSubmit = function (event) {\n      event.preventDefault();\n      /* send this updated value to reducer using action creator */\n\n      _this.props.editList(_this.state.term, _this.props.triggerChildUpdate.editKey);\n\n      _this.setState({\n        term: \"\"\n      });\n      /* updateApp callback function for reseting the values of\n        state after updation task is completed. */\n\n\n      _this.props.updateApp();\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateList, [{\n    key: \"listForm\",\n    value: function listForm() {\n      if (this.props.triggerChildUpdate.editTable && this.props.mydata.length !== 0) {\n        return React.createElement(\"div\", {\n          className: \" search-bar ui segment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.onUpdateSubmit,\n          className: \"ui form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Update To Do Item\"), React.createElement(\"input\", {\n          id: \"textData\",\n          type: \"text\",\n          value: this.state.term,\n          placeholder: this.state.updateHolder,\n          onChange: this.onInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \" search-bar ui segment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.onSearchSubmit,\n          className: \"ui form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Add To Do Item\"), React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.term,\n          placeholder: this.state.inputHolder,\n          onChange: this.onInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }))));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.props.triggerChildUpdate,\"clist\")\n      return React.createElement(\"div\", {\n        className: \"ui relaxed divided list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.listForm());\n    }\n  }]);\n\n  return CreateList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //console.log(state)\n  return {\n    mydata: state.mydata\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addList: addList,\n  editList: editList\n})(CreateList);","map":{"version":3,"sources":["/etc/opt/todolist/src/components/CreateList.js"],"names":["React","addList","editList","connect","CreateList","state","term","inputHolder","updateHolder","onInputChange","event","setState","target","value","onSearchSubmit","preventDefault","props","alert","onUpdateSubmit","triggerChildUpdate","editKey","updateApp","editTable","mydata","length","listForm","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { addList,editList } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nclass CreateList extends React.Component {\n  \n  state = { term: \"\", inputHolder: \"Add To-do Data\",updateHolder: \"Update To-do Data\" };\n  \n  onInputChange = event => {\n    this.setState({ term: event.target.value });\n  };\n  \n  onSearchSubmit = event => {\n    event.preventDefault();\n\n    /* send this value to reducer using action creator */\n    if (this.state.term !== \"\") {\n      this.props.addList(this.state.term);\n      this.setState({ term: \"\" });\n    } else {\n      alert(\"enter To Do item\");\n    }\n  };\n\n  onUpdateSubmit = event => {\n    event.preventDefault();\n    /* send this updated value to reducer using action creator */\n      \n    this.props.editList(this.state.term,this.props.triggerChildUpdate.editKey);\n    this.setState({ term: \"\" });\n    \n    /* updateApp callback function for reseting the values of\n      state after updation task is completed. */\n    \n    this.props.updateApp();\n  };\n\n listForm() {\n   if(this.props.triggerChildUpdate.editTable && this.props.mydata.length !==0){\n     return (\n       <div className=\" search-bar ui segment\">\n        <form onSubmit={this.onUpdateSubmit} className=\"ui form\">\n          <div className=\"field\">\n          <label>Update To Do Item</label>\n          <input\n            id=\"textData\"\n            type=\"text\"\n            value={this.state.term}\n            placeholder={this.state.updateHolder}\n            onChange={this.onInputChange}\n          />\n          </div>\n      </form>\n      </div>\n     );\n    }else{\n      return (\n        <div className=\" search-bar ui segment\">\n          <form onSubmit={this.onSearchSubmit} className=\"ui form\">\n            <div className=\"field\">\n              <label>Add To Do Item</label>\n              <input \n              type=\"text\"\n              value={this.state.term}\n              placeholder={this.state.inputHolder}\n              onChange={this.onInputChange}\n              />\n            </div>\n          </form>\n        </div>\n      );\n    }\n}\n  render() {\n    //console.log(this.props.triggerChildUpdate,\"clist\")\n    return <div className=\"ui relaxed divided list\">{this.listForm()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  //console.log(state)\n  return {\n    mydata: state.mydata\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { addList,editList }\n)(CreateList);\n"]},"metadata":{},"sourceType":"module"}